import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "next-themes";
import { GithubIcon, TwitterIcon } from "lucide-react";
import Link from "next/link";
import { ThemeToggle } from "@/components/theme/theme-toggle";
import { siteConfig } from "@/config/site";
import { Button } from "@/components/ui/button";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // 图标映射
  const iconMap = {
    github: GithubIcon,
    twitter: TwitterIcon,
  } as const;

  return (
    <html lang={siteConfig.lang} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <div className="min-h-screen flex flex-col">
            {children}
            <footer className="mt-auto mx-auto w-full max-w-5xl px-4 py-8">
              <div className="flex gap-4">

              {siteConfig.socialLinks.map((item) => {
                const IconComponent =
                  iconMap[item.icon as keyof typeof iconMap];
                return (
                  <Button
                    key={item.link}
                    variant="ghost"
                    size="icon"
                    asChild
                    className="rounded-full bg-gray-200 text-gray-600 hover:bg-gray-300 
                      hover:text-gray-900 dark:bg-[#1e1f21] dark:text-gray-400 dark:hover:text-gray-200"
                  >
                    <Link key={item.link} href={item.link} target="_blank">
                      <IconComponent className="!w-5 !h-5" />
                    </Link>
                  </Button>
                  );
                })}
              </div>

              <div className="mt-4 flex items-center justify-between">
                <div className="text-slate-600 dark:text-slate-400 text-sm">
                  {siteConfig.copyRight}
                </div>
                <ThemeToggle />
              </div>
            </footer>
          </div>
          <div className="fixed inset-0 z-[-1] h-full w-full bg-[url('/noise.png')] bg-[size:128px_128px] bg-repeat opacity-[0.06]"></div>
        </ThemeProvider>
      </body>
    </html>
  );
}
